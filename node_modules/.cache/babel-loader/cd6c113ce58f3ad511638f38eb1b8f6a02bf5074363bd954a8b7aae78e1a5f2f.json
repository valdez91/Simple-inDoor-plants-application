{"ast":null,"code":"var _jsxFileName = \"/home/valdez/Desktop/codelibrary/privateCodeChallange/Plantsy-challange/src/components/PlantPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport NewPlantForm from \"./NewPlantForm\";\nimport PlantList from \"./PlantList\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlantPage() {\n  _s();\n  const [plants, setPlants] = useState([]);\n  const [filteredPlants, setFilteredPlants] = useState([]);\n  useEffect(() => {\n    fetch('../../db.json/plants').then(res => {\n      if (!res.ok) {\n        throw new Error('Network response was not ok: ' + res.statusText);\n      }\n      return res.json();\n    }).then(data => {\n      console.log('Fetched data:', data); // Log the fetched data\n      setPlants(data.plants);\n      setFilteredPlants(data.plants);\n    }).catch(error => {\n      console.error('There was a problem fetching the data:', error);\n    });\n  }, []);\n  const handleSearch = query => {\n    const filtered = plants.filter(plant => plant.name.toLowerCase().includes(query.toLowerCase()));\n    setFilteredPlants(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(NewPlantForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlantList, {\n      plants: filteredPlants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(PlantPage, \"zeIPdij9kR77nflbBR+DPr319nI=\");\n_c = PlantPage;\nexport default PlantPage;\nvar _c;\n$RefreshReg$(_c, \"PlantPage\");","map":{"version":3,"names":["React","useState","useEffect","NewPlantForm","PlantList","Search","jsxDEV","_jsxDEV","PlantPage","_s","plants","setPlants","filteredPlants","setFilteredPlants","fetch","then","res","ok","Error","statusText","json","data","console","log","catch","error","handleSearch","query","filtered","filter","plant","name","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["/home/valdez/Desktop/codelibrary/privateCodeChallange/Plantsy-challange/src/components/PlantPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport NewPlantForm from \"./NewPlantForm\";\nimport PlantList from \"./PlantList\";\nimport Search from \"./Search\";\n\nfunction PlantPage() {\n  const [plants, setPlants] = useState([]);\n  const [filteredPlants, setFilteredPlants] = useState([]);\n  \n  useEffect(() => {\n    fetch('../../db.json/plants')\n      .then(res => {\n        if (!res.ok) {\n          throw new Error('Network response was not ok: ' + res.statusText);\n        }\n        return res.json();\n      })\n      .then(data => {\n        console.log('Fetched data:', data); // Log the fetched data\n        setPlants(data.plants);\n        setFilteredPlants(data.plants);\n      })\n      .catch(error => {\n        console.error('There was a problem fetching the data:', error);\n      });\n  }, []);\n  \n\n  const handleSearch = (query) => {\n    const filtered = plants.filter((plant) =>\n      plant.name.toLowerCase().includes(query.toLowerCase())\n    );\n    setFilteredPlants(filtered);\n  };\n\n  return (\n    <main>\n      <NewPlantForm />\n      <Search onSearch={handleSearch} />\n      <PlantList plants={filteredPlants} />\n    </main>\n  );\n}\n\nexport default PlantPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,sBAAsB,CAAC,CAC1BC,IAAI,CAACC,GAAG,IAAI;MACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,+BAA+B,GAAGF,GAAG,CAACG,UAAU,CAAC;MACnE;MACA,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC,CAAC,CAAC;MACpCV,SAAS,CAACU,IAAI,CAACX,MAAM,CAAC;MACtBG,iBAAiB,CAACQ,IAAI,CAACX,MAAM,CAAC;IAChC,CAAC,CAAC,CACDc,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,QAAQ,GAAGlB,MAAM,CAACmB,MAAM,CAAEC,KAAK,IACnCA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,KAAK,CAACK,WAAW,CAAC,CAAC,CACvD,CAAC;IACDnB,iBAAiB,CAACe,QAAQ,CAAC;EAC7B,CAAC;EAED,oBACErB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA,CAACJ,YAAY;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChB/B,OAAA,CAACF,MAAM;MAACkC,QAAQ,EAAEb;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC/B,OAAA,CAACH,SAAS;MAACM,MAAM,EAAEE;IAAe;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX;AAAC7B,EAAA,CArCQD,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAuClB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}